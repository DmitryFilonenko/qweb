@model IEnumerable<WebUI.Models.QEntities.ActualCreditor>


@{
    ViewBag.Title = "EADR";
}

@*<div class="jumbotron">
        <p class="lead">ASP.NET is a free web framework.</p>

    </div>*@

@*var options = new AjaxOptions()
    {
        UpdateTargetId = "tabledata",
        Url = Url.Action("OrdersData"),
        LoadingElementId = "loadingIndicator",

        OnBegin = "OnBeginJs",
        OnSuccess = "OnSuccessJs",
        OnFailure = "OnFailureJs",
        OnComplete = "OnCompleteJs",
    };*@

@*@using (Ajax.BeginForm())
    {
    }*@
<div class="row">

    <ul class="nav navbar-nav side-nav">

        <li class="dropdown">
            <br />
            <a href="#" class="dropdown-toggle text-center" style="font-size:18px" data-toggle="dropdown"><i class="fa fa-caret-square-o-down"></i> Задачи <b class="caret"></b></a>
            <ul class="dropdown-menu">

                @if (ViewBag.Tasks != null)
                {
                    foreach (var item in ViewBag.Tasks as SelectList)
                    {
                        <li>
                            @Ajax.ActionLink(item.Text, "SubTasks", new { id = item.Value }, new AjaxOptions() { UpdateTargetId = "subtasks" })
                        </li>
                    }
                }

            </ul>
        </li>

        <li class="text-info text-center">
            <div id="subtasks"></div>
        </li>
    </ul>
</div>


<div id="concret_task">

    @*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
    <p class="text-center">Актуальные кредиторы:</p>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrgName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Alias)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrgIdLong)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrgIdShorty)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrgName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Alias)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrgIdLong)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrgIdShorty)
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |*@
                    @Html.ActionLink("Реестры", "Regs", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }

    </table>

</div>



@*<hr />
<hr />
<hr />*@

<footer>
    <p class="panel-footer" style="text-align:center">&copy; @DateTime.Now.Year -  Европейское агентство по возврату долгов.</p>
</footer>





@*@Html.Partial("ConcretTask")*@


@*@using (Html.BeginForm())
    {

        @:Таблицы:
        @Html.DropDownList("list", new SelectList(new[] { "import_user.dima_imp", "import_user.yurko_imp", "import_user.import_clnt_example" }))

        <br />

        @:Список с множественным выбором
            @Html.ListBox("list2", new MultiSelectList(new[] { "a", "b", "c", "d" }), new { style = "width:100px;" })

        <br />

        <input type="submit" name="button" value="Количество записей в таблице" />

    }

    <br />

    @ViewBag.Message*@



@*@Ajax.ActionLink("ErrorLink", "SubTasks",
    new AjaxOptions()
    {
        //OnBegin = "OnBeginJs",
        OnSuccess = "OnSuccessJs",
        //OnFailure = "OnFailureJs",
        //OnComplete = "OnCompleteJs",
    })*@





@section scripts
{
    @*Ненавязивый JavaScript для выполнения запроса на сервер без полного обновления страницы*@
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    @*<script type="text/javascript">
            function OnBeginJs() {
                alert("OnBegin Callback");
            }

            function OnSuccessJs(data) {
                alert("OnSuccess Callback: " + data);
            }

            function OnFailureJs(request, error) {
                alert("OnFailure Callback: " + error);
            }

            function OnCompleteJs(request, status) {
                alert("OnComplete Callback: " + status);
            }
        </script>*@
}










