@using WebUI.Models.QEntities
@model WebUI.Models.Home.PinListViewModel



<ol class="breadcrumb">
    <li class="breadcrumb-item">@Html.ActionLink("К списку контрагентов", "Index")</li>
    <li class="breadcrumb-item">
        @Ajax.ActionLink("К списку реестров " + Model.PinSet.First().CreditorName, "Regs", new { creditorId = Model.PinSet.First().CreditorIdLong }, new AjaxOptions()
        {
           InsertionMode = InsertionMode.Replace,
           UpdateTargetId = "concret_task",
           LoadingElementId = "loader"
        })
    </li>
</ol>


<table class="table">
    <tr>
        @*<th>
            @Html.DisplayNameFor(model => model.PinSet[0].CreditorName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PinSet[0].RegName)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.PinSet[0].NameF)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PinSet[0].NameI)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PinSet[0].NameO)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PinSet[0].Inn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PinSet[0].BusinessN)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PinSet[0].DebtDogovorN)
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model.PinSet)
    {
    <tr>

        @*<td class=@Html.GetAlertType(item.ArchiveFlag)>
            @Html.DisplayFor(modelItem => item.CreditorName)
        </td>

        <td class=@Html.GetAlertType(item.ArchiveFlag)>
            @Html.DisplayFor(modelItem => item.RegName)
        </td>*@

        <td class=@Html.GetAlertType(item.ArchiveFlag)>
            @Html.DisplayFor(modelItem => item.NameF)
        </td>


        <td class=@Html.GetAlertType(item.ArchiveFlag)>
            @Html.DisplayFor(modelItem => item.NameI)
        </td>

        <td class=@Html.GetAlertType(item.ArchiveFlag)>
            @Html.DisplayFor(modelItem => item.NameO)
        </td>


        <td class=@Html.GetAlertType(item.ArchiveFlag)>
            @Html.DisplayFor(modelItem => item.Inn)
        </td>

        <td class=@Html.GetAlertType(item.ArchiveFlag)>
            @Html.DisplayFor(modelItem => item.BusinessN)
        </td>

        <td class=@Html.GetAlertType(item.ArchiveFlag)>
            @Html.DisplayFor(modelItem => item.DebtDogovorN)
        </td>
        <td>
            @Ajax.ActionLink("Детально", "PinDetails", new { pin = item.BusinessN }, new AjaxOptions() { UpdateTargetId = "concret_task", LoadingElementId = "loader" })
        </td>

    </tr>
    }
</table>
<div>


    @if (Model.PagingInfo.TotalItems > Model.PagingInfo.ItemsPerPage)
    {
        <div>
            <ul class="pagination">

                @for (int i = 1; i <= Model.PagingInfo.TotalPages; ++i)
                {
                    if (Model.PagingInfo.CurrentPage == i)
                    {
                        <li class="page-item active">
                            @Ajax.ActionLink(i.ToString(), "Pins", new { regId = Model.PinSet[0].RegIdLong, page = i }, new AjaxOptions() { UpdateTargetId = "concret_task", LoadingElementId = "loader" })
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            @Ajax.ActionLink(i.ToString(), "Pins", new { regId = Model.PinSet[0].RegIdLong, page = i }, new AjaxOptions() { UpdateTargetId = "concret_task", LoadingElementId = "loader" })
                        </li>
                    }
                }

            </ul>
        </div>
    }

</div>




