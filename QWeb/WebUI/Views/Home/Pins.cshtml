@model IEnumerable<WebUI.Models.QEntities.Pin>


<ol class="breadcrumb">
    <li class="breadcrumb-item">@Html.ActionLink("К списку контрагентов", "Index")</li>
    <li class="breadcrumb-item">
        @Ajax.ActionLink("К списку реестров " + Model.First().CreditorName, "Regs", new { creditorId = Model.First().CreditorIdLong }, new AjaxOptions()
        {
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "concret_task",
            LoadingElementId = "loader"
        })
    </li>
</ol>

<h1>grid</h1>



@{
    var grid = new WebGrid(Model, rowsPerPage:30, ajaxUpdateContainerId: "agrid"
        //defaultSort: "",
        //rowsPerPage: 3,
        //selectionFieldName: "SearchString",
        //sortFieldName: "SortColumn",
        //sortDirectionFieldName: "SortOrder"
        );

    //  grid.Bind(Model, autoSortAndPage: true, rowCount: 3);
}

@grid.GetHtml(

    columns: grid.Columns(
        grid.Column(columnName: "CreditorName", header: "Кредитор"),
        grid.Column(columnName: "NameF", header: "Фамилия"),
        grid.Column(columnName: "NameI", header: "Имя"),
        grid.Column(columnName: "NameO", header: "Отчество"),
        grid.Column(columnName: "Inn", header: "Инн"),
        grid.Column(columnName: "BusinessN", header: "Пин"),
        grid.Column(columnName: "DebtDogovorN", header: "Договор")),

    tableStyle: "grid",
        htmlAttributes: new { cellpadding = "6px", cellspacing = "0px",  }
)



@*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CreditorName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NameF)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NameI)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NameO)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BusinessN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DebtDogovorN)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                <td class=@Html.GetAlertType(item.ArchiveFlag)>
                    @Html.DisplayFor(modelItem => item.CreditorName)
                </td>

                <td class=@Html.GetAlertType(item.ArchiveFlag)>
                    @Html.DisplayFor(modelItem => item.NameF)
                </td>


                <td class=@Html.GetAlertType(item.ArchiveFlag)>
                    @Html.DisplayFor(modelItem => item.NameI)
                </td>

                <td class=@Html.GetAlertType(item.ArchiveFlag)>
                    @Html.DisplayFor(modelItem => item.NameO)
                </td>


                <td class=@Html.GetAlertType(item.ArchiveFlag)>
                    @Html.DisplayFor(modelItem => item.Inn)
                </td>

                <td class=@Html.GetAlertType(item.ArchiveFlag)>
                    @Html.DisplayFor(modelItem => item.BusinessN)
                </td>

                <td class=@Html.GetAlertType(item.ArchiveFlag)>
                    @Html.DisplayFor(modelItem => item.DebtDogovorN)
                </td>
                <td>
                    @Ajax.ActionLink("Детально", "PinDetails", new { pin = item.BusinessN }, new AjaxOptions() { UpdateTargetId = "concret_task", LoadingElementId = "loader" })
                </td>


            </tr>
        }

    </table>*@
